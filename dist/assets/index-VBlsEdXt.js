(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const o of document.querySelectorAll('link[rel="modulepreload"]'))i(o);new MutationObserver(o=>{for(const c of o)if(c.type==="childList")for(const d of c.addedNodes)d.tagName==="LINK"&&d.rel==="modulepreload"&&i(d)}).observe(document,{childList:!0,subtree:!0});function n(o){const c={};return o.integrity&&(c.integrity=o.integrity),o.referrerPolicy&&(c.referrerPolicy=o.referrerPolicy),o.crossOrigin==="use-credentials"?c.credentials="include":o.crossOrigin==="anonymous"?c.credentials="omit":c.credentials="same-origin",c}function i(o){if(o.ep)return;o.ep=!0;const c=n(o);fetch(o.href,c)}})();const m=document.querySelector(".header__toggle-theme-button"),_=document.querySelector(".container"),f=document.querySelector(".section__add-todo-button"),a=document.querySelector(".section__todo-input"),h=document.querySelector(".section__list"),r=document.querySelector(".section__check-button"),u=document.querySelectorAll(".section__filter-option");let s=[];const p=()=>{document.querySelectorAll(".section__todo .section__check-button").forEach(i=>{i.addEventListener("click",o=>{const{position:c}=o.target.dataset;E(c)})}),document.querySelectorAll(".section__todo .section__delete-button").forEach(i=>{i.addEventListener("click",o=>{const{position:c}=o.target.dataset;g(c)})}),document.querySelector(".section__clear-completed").addEventListener("click",C)},l=e=>{let t="";e.forEach((n,i)=>{t+=`<li class="section__list-item section__todo">
        <button data-position=${i} class="section__check-button ${n.isChecked&&"section__check-button--isChecked"}"></button>
        <p class="section__todo-text ${n.isChecked&&"section__todo-text--isDone"}">${n.todoValue}</p>
        <button data-position=${i} class="section__delete-button"></button>
    </li>`}),t+=`<li class="section__list-item">
      <span class="section__items-left">
        <span class="section__items-num">${e.filter(n=>!n.isChecked).length} </span>items left
      </span>
      <button class="section__clear-completed">Clear Completed</button>
    </li>`,h.innerHTML=t,p()};function k(e,t){const n=e;if(!n)return;const i=t;s.unshift({todoValue:n,isChecked:i}),l(s)}function E(e){s[e].isChecked=!s[e].isChecked,l(s)}function g(e){s.splice(e,1),l(s)}function C(){const e=s.filter(t=>!t.isChecked);s.length!==e.length&&(s=e,l(e))}function b(e){if(s.length)switch(e){case 1:l(s.filter(t=>!t.isChecked));break;case 2:l(s.filter(t=>t.isChecked));break;default:l(s)}}m.addEventListener("click",()=>{_.classList.toggle("container--isDark")});r.addEventListener("click",()=>{r.classList.toggle("section__check-button--isChecked")});const L=()=>{r.classList.remove("section__check-button--isChecked"),a.value=""};f.addEventListener("click",e=>{e.preventDefault();const t=r.classList.contains("section__check-button--isChecked");k(a.value,t),L()});u.forEach((e,t)=>{e.addEventListener("click",n=>{u.forEach(i=>{i.classList.remove("section__filter-option--isSelected"),n.target.classList.add("section__filter-option--isSelected")}),b(t)})});
